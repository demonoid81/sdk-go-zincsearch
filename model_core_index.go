/*
Zinc Search engine API

Zinc Search engine API documents https://docs.zincsearch.com

API version: 0.2.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CoreIndex struct for CoreIndex
type CoreIndex struct {
	CreateAt *string `json:"create_at,omitempty"`
	DocNum *int32 `json:"doc_num,omitempty"`
	DocTimeMax *int32 `json:"doc_time_max,omitempty"`
	DocTimeMin *int32 `json:"doc_time_min,omitempty"`
	Mappings *MetaMappings `json:"mappings,omitempty"`
	Name *string `json:"name,omitempty"`
	Settings *MetaIndexSettings `json:"settings,omitempty"`
	ShardNum *int32 `json:"shard_num,omitempty"`
	Shards []MetaIndexShard `json:"shards,omitempty"`
	StorageSize *int32 `json:"storage_size,omitempty"`
	StorageType *string `json:"storage_type,omitempty"`
	UpdateAt *string `json:"update_at,omitempty"`
}

// NewCoreIndex instantiates a new CoreIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreIndex() *CoreIndex {
	this := CoreIndex{}
	return &this
}

// NewCoreIndexWithDefaults instantiates a new CoreIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreIndexWithDefaults() *CoreIndex {
	this := CoreIndex{}
	return &this
}

// GetCreateAt returns the CreateAt field value if set, zero value otherwise.
func (o *CoreIndex) GetCreateAt() string {
	if o == nil || o.CreateAt == nil {
		var ret string
		return ret
	}
	return *o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetCreateAtOk() (*string, bool) {
	if o == nil || o.CreateAt == nil {
		return nil, false
	}
	return o.CreateAt, true
}

// HasCreateAt returns a boolean if a field has been set.
func (o *CoreIndex) HasCreateAt() bool {
	if o != nil && o.CreateAt != nil {
		return true
	}

	return false
}

// SetCreateAt gets a reference to the given string and assigns it to the CreateAt field.
func (o *CoreIndex) SetCreateAt(v string) {
	o.CreateAt = &v
}

// GetDocNum returns the DocNum field value if set, zero value otherwise.
func (o *CoreIndex) GetDocNum() int32 {
	if o == nil || o.DocNum == nil {
		var ret int32
		return ret
	}
	return *o.DocNum
}

// GetDocNumOk returns a tuple with the DocNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetDocNumOk() (*int32, bool) {
	if o == nil || o.DocNum == nil {
		return nil, false
	}
	return o.DocNum, true
}

// HasDocNum returns a boolean if a field has been set.
func (o *CoreIndex) HasDocNum() bool {
	if o != nil && o.DocNum != nil {
		return true
	}

	return false
}

// SetDocNum gets a reference to the given int32 and assigns it to the DocNum field.
func (o *CoreIndex) SetDocNum(v int32) {
	o.DocNum = &v
}

// GetDocTimeMax returns the DocTimeMax field value if set, zero value otherwise.
func (o *CoreIndex) GetDocTimeMax() int32 {
	if o == nil || o.DocTimeMax == nil {
		var ret int32
		return ret
	}
	return *o.DocTimeMax
}

// GetDocTimeMaxOk returns a tuple with the DocTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetDocTimeMaxOk() (*int32, bool) {
	if o == nil || o.DocTimeMax == nil {
		return nil, false
	}
	return o.DocTimeMax, true
}

// HasDocTimeMax returns a boolean if a field has been set.
func (o *CoreIndex) HasDocTimeMax() bool {
	if o != nil && o.DocTimeMax != nil {
		return true
	}

	return false
}

// SetDocTimeMax gets a reference to the given int32 and assigns it to the DocTimeMax field.
func (o *CoreIndex) SetDocTimeMax(v int32) {
	o.DocTimeMax = &v
}

// GetDocTimeMin returns the DocTimeMin field value if set, zero value otherwise.
func (o *CoreIndex) GetDocTimeMin() int32 {
	if o == nil || o.DocTimeMin == nil {
		var ret int32
		return ret
	}
	return *o.DocTimeMin
}

// GetDocTimeMinOk returns a tuple with the DocTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetDocTimeMinOk() (*int32, bool) {
	if o == nil || o.DocTimeMin == nil {
		return nil, false
	}
	return o.DocTimeMin, true
}

// HasDocTimeMin returns a boolean if a field has been set.
func (o *CoreIndex) HasDocTimeMin() bool {
	if o != nil && o.DocTimeMin != nil {
		return true
	}

	return false
}

// SetDocTimeMin gets a reference to the given int32 and assigns it to the DocTimeMin field.
func (o *CoreIndex) SetDocTimeMin(v int32) {
	o.DocTimeMin = &v
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *CoreIndex) GetMappings() MetaMappings {
	if o == nil || o.Mappings == nil {
		var ret MetaMappings
		return ret
	}
	return *o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetMappingsOk() (*MetaMappings, bool) {
	if o == nil || o.Mappings == nil {
		return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *CoreIndex) HasMappings() bool {
	if o != nil && o.Mappings != nil {
		return true
	}

	return false
}

// SetMappings gets a reference to the given MetaMappings and assigns it to the Mappings field.
func (o *CoreIndex) SetMappings(v MetaMappings) {
	o.Mappings = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreIndex) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreIndex) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreIndex) SetName(v string) {
	o.Name = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *CoreIndex) GetSettings() MetaIndexSettings {
	if o == nil || o.Settings == nil {
		var ret MetaIndexSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetSettingsOk() (*MetaIndexSettings, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *CoreIndex) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given MetaIndexSettings and assigns it to the Settings field.
func (o *CoreIndex) SetSettings(v MetaIndexSettings) {
	o.Settings = &v
}

// GetShardNum returns the ShardNum field value if set, zero value otherwise.
func (o *CoreIndex) GetShardNum() int32 {
	if o == nil || o.ShardNum == nil {
		var ret int32
		return ret
	}
	return *o.ShardNum
}

// GetShardNumOk returns a tuple with the ShardNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetShardNumOk() (*int32, bool) {
	if o == nil || o.ShardNum == nil {
		return nil, false
	}
	return o.ShardNum, true
}

// HasShardNum returns a boolean if a field has been set.
func (o *CoreIndex) HasShardNum() bool {
	if o != nil && o.ShardNum != nil {
		return true
	}

	return false
}

// SetShardNum gets a reference to the given int32 and assigns it to the ShardNum field.
func (o *CoreIndex) SetShardNum(v int32) {
	o.ShardNum = &v
}

// GetShards returns the Shards field value if set, zero value otherwise.
func (o *CoreIndex) GetShards() []MetaIndexShard {
	if o == nil || o.Shards == nil {
		var ret []MetaIndexShard
		return ret
	}
	return o.Shards
}

// GetShardsOk returns a tuple with the Shards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetShardsOk() ([]MetaIndexShard, bool) {
	if o == nil || o.Shards == nil {
		return nil, false
	}
	return o.Shards, true
}

// HasShards returns a boolean if a field has been set.
func (o *CoreIndex) HasShards() bool {
	if o != nil && o.Shards != nil {
		return true
	}

	return false
}

// SetShards gets a reference to the given []MetaIndexShard and assigns it to the Shards field.
func (o *CoreIndex) SetShards(v []MetaIndexShard) {
	o.Shards = v
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *CoreIndex) GetStorageSize() int32 {
	if o == nil || o.StorageSize == nil {
		var ret int32
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetStorageSizeOk() (*int32, bool) {
	if o == nil || o.StorageSize == nil {
		return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *CoreIndex) HasStorageSize() bool {
	if o != nil && o.StorageSize != nil {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int32 and assigns it to the StorageSize field.
func (o *CoreIndex) SetStorageSize(v int32) {
	o.StorageSize = &v
}

// GetStorageType returns the StorageType field value if set, zero value otherwise.
func (o *CoreIndex) GetStorageType() string {
	if o == nil || o.StorageType == nil {
		var ret string
		return ret
	}
	return *o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetStorageTypeOk() (*string, bool) {
	if o == nil || o.StorageType == nil {
		return nil, false
	}
	return o.StorageType, true
}

// HasStorageType returns a boolean if a field has been set.
func (o *CoreIndex) HasStorageType() bool {
	if o != nil && o.StorageType != nil {
		return true
	}

	return false
}

// SetStorageType gets a reference to the given string and assigns it to the StorageType field.
func (o *CoreIndex) SetStorageType(v string) {
	o.StorageType = &v
}

// GetUpdateAt returns the UpdateAt field value if set, zero value otherwise.
func (o *CoreIndex) GetUpdateAt() string {
	if o == nil || o.UpdateAt == nil {
		var ret string
		return ret
	}
	return *o.UpdateAt
}

// GetUpdateAtOk returns a tuple with the UpdateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreIndex) GetUpdateAtOk() (*string, bool) {
	if o == nil || o.UpdateAt == nil {
		return nil, false
	}
	return o.UpdateAt, true
}

// HasUpdateAt returns a boolean if a field has been set.
func (o *CoreIndex) HasUpdateAt() bool {
	if o != nil && o.UpdateAt != nil {
		return true
	}

	return false
}

// SetUpdateAt gets a reference to the given string and assigns it to the UpdateAt field.
func (o *CoreIndex) SetUpdateAt(v string) {
	o.UpdateAt = &v
}

func (o CoreIndex) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateAt != nil {
		toSerialize["create_at"] = o.CreateAt
	}
	if o.DocNum != nil {
		toSerialize["doc_num"] = o.DocNum
	}
	if o.DocTimeMax != nil {
		toSerialize["doc_time_max"] = o.DocTimeMax
	}
	if o.DocTimeMin != nil {
		toSerialize["doc_time_min"] = o.DocTimeMin
	}
	if o.Mappings != nil {
		toSerialize["mappings"] = o.Mappings
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.ShardNum != nil {
		toSerialize["shard_num"] = o.ShardNum
	}
	if o.Shards != nil {
		toSerialize["shards"] = o.Shards
	}
	if o.StorageSize != nil {
		toSerialize["storage_size"] = o.StorageSize
	}
	if o.StorageType != nil {
		toSerialize["storage_type"] = o.StorageType
	}
	if o.UpdateAt != nil {
		toSerialize["update_at"] = o.UpdateAt
	}
	return json.Marshal(toSerialize)
}

type NullableCoreIndex struct {
	value *CoreIndex
	isSet bool
}

func (v NullableCoreIndex) Get() *CoreIndex {
	return v.value
}

func (v *NullableCoreIndex) Set(val *CoreIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreIndex(val *CoreIndex) *NullableCoreIndex {
	return &NullableCoreIndex{value: val, isSet: true}
}

func (v NullableCoreIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


