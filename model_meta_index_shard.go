/*
Zinc Search engine API

Zinc Search engine API documents https://docs.zincsearch.com

API version: 0.2.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MetaIndexShard struct for MetaIndexShard
type MetaIndexShard struct {
	DocNum *int32 `json:"doc_num,omitempty"`
	DocTimeMax *int32 `json:"doc_time_max,omitempty"`
	DocTimeMin *int32 `json:"doc_time_min,omitempty"`
	Id *int32 `json:"id,omitempty"`
	StorageSize *int32 `json:"storage_size,omitempty"`
}

// NewMetaIndexShard instantiates a new MetaIndexShard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaIndexShard() *MetaIndexShard {
	this := MetaIndexShard{}
	return &this
}

// NewMetaIndexShardWithDefaults instantiates a new MetaIndexShard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaIndexShardWithDefaults() *MetaIndexShard {
	this := MetaIndexShard{}
	return &this
}

// GetDocNum returns the DocNum field value if set, zero value otherwise.
func (o *MetaIndexShard) GetDocNum() int32 {
	if o == nil || o.DocNum == nil {
		var ret int32
		return ret
	}
	return *o.DocNum
}

// GetDocNumOk returns a tuple with the DocNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexShard) GetDocNumOk() (*int32, bool) {
	if o == nil || o.DocNum == nil {
		return nil, false
	}
	return o.DocNum, true
}

// HasDocNum returns a boolean if a field has been set.
func (o *MetaIndexShard) HasDocNum() bool {
	if o != nil && o.DocNum != nil {
		return true
	}

	return false
}

// SetDocNum gets a reference to the given int32 and assigns it to the DocNum field.
func (o *MetaIndexShard) SetDocNum(v int32) {
	o.DocNum = &v
}

// GetDocTimeMax returns the DocTimeMax field value if set, zero value otherwise.
func (o *MetaIndexShard) GetDocTimeMax() int32 {
	if o == nil || o.DocTimeMax == nil {
		var ret int32
		return ret
	}
	return *o.DocTimeMax
}

// GetDocTimeMaxOk returns a tuple with the DocTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexShard) GetDocTimeMaxOk() (*int32, bool) {
	if o == nil || o.DocTimeMax == nil {
		return nil, false
	}
	return o.DocTimeMax, true
}

// HasDocTimeMax returns a boolean if a field has been set.
func (o *MetaIndexShard) HasDocTimeMax() bool {
	if o != nil && o.DocTimeMax != nil {
		return true
	}

	return false
}

// SetDocTimeMax gets a reference to the given int32 and assigns it to the DocTimeMax field.
func (o *MetaIndexShard) SetDocTimeMax(v int32) {
	o.DocTimeMax = &v
}

// GetDocTimeMin returns the DocTimeMin field value if set, zero value otherwise.
func (o *MetaIndexShard) GetDocTimeMin() int32 {
	if o == nil || o.DocTimeMin == nil {
		var ret int32
		return ret
	}
	return *o.DocTimeMin
}

// GetDocTimeMinOk returns a tuple with the DocTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexShard) GetDocTimeMinOk() (*int32, bool) {
	if o == nil || o.DocTimeMin == nil {
		return nil, false
	}
	return o.DocTimeMin, true
}

// HasDocTimeMin returns a boolean if a field has been set.
func (o *MetaIndexShard) HasDocTimeMin() bool {
	if o != nil && o.DocTimeMin != nil {
		return true
	}

	return false
}

// SetDocTimeMin gets a reference to the given int32 and assigns it to the DocTimeMin field.
func (o *MetaIndexShard) SetDocTimeMin(v int32) {
	o.DocTimeMin = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetaIndexShard) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexShard) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetaIndexShard) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MetaIndexShard) SetId(v int32) {
	o.Id = &v
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *MetaIndexShard) GetStorageSize() int32 {
	if o == nil || o.StorageSize == nil {
		var ret int32
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaIndexShard) GetStorageSizeOk() (*int32, bool) {
	if o == nil || o.StorageSize == nil {
		return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *MetaIndexShard) HasStorageSize() bool {
	if o != nil && o.StorageSize != nil {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int32 and assigns it to the StorageSize field.
func (o *MetaIndexShard) SetStorageSize(v int32) {
	o.StorageSize = &v
}

func (o MetaIndexShard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DocNum != nil {
		toSerialize["doc_num"] = o.DocNum
	}
	if o.DocTimeMax != nil {
		toSerialize["doc_time_max"] = o.DocTimeMax
	}
	if o.DocTimeMin != nil {
		toSerialize["doc_time_min"] = o.DocTimeMin
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.StorageSize != nil {
		toSerialize["storage_size"] = o.StorageSize
	}
	return json.Marshal(toSerialize)
}

type NullableMetaIndexShard struct {
	value *MetaIndexShard
	isSet bool
}

func (v NullableMetaIndexShard) Get() *MetaIndexShard {
	return v.value
}

func (v *NullableMetaIndexShard) Set(val *MetaIndexShard) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaIndexShard) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaIndexShard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaIndexShard(val *MetaIndexShard) *NullableMetaIndexShard {
	return &NullableMetaIndexShard{value: val, isSet: true}
}

func (v NullableMetaIndexShard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaIndexShard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


